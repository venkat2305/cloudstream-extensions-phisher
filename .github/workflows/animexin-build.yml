name: Build Animexin Only

# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: "animexin-build"
  cancel-in-progress: true

on:
  push:
    branches:
      - master
      - main
    paths:
      - 'Animexin/**'
      - '.github/workflows/animexin-build.yml'

jobs:
  build-animexin:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          path: "src"

      - name: Checkout builds
        uses: actions/checkout@v4.2.2
        with:
          ref: "builds"
          path: "builds"

      - name: Clean old Animexin builds
        run: |
          rm $GITHUB_WORKSPACE/builds/Animexin*.cs3 || true
          rm $GITHUB_WORKSPACE/builds/Animexin*.jar || true

      - name: Setup JDK 17
        uses: actions/setup-java@v4.6.0
        with:
          distribution: "adopt"
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3.2.2

      - name: Access Required Secrets
        env:
          TMDB_API: ${{ secrets.TMDB_API }}
          DUMP_API: ${{ secrets.DUMP_API }}
          DUMP_KEY: ${{ secrets.DUMP_KEY }}
        run: |
          cd $GITHUB_WORKSPACE/src
          echo TMDB_API=$TMDB_API >> local.properties
          echo DUMP_API=$DUMP_API >> local.properties
          echo DUMP_KEY=$DUMP_KEY >> local.properties

      - name: Build Animexin Plugin
        run: |
          cd $GITHUB_WORKSPACE/src
          chmod +x gradlew
          ./gradlew :Animexin:make

      - name: Copy Animexin artifacts
        run: |
          cp $GITHUB_WORKSPACE/src/Animexin/build/*.cs3 $GITHUB_WORKSPACE/builds/ 2>/dev/null || true
          cp $GITHUB_WORKSPACE/src/Animexin/build/*.jar $GITHUB_WORKSPACE/builds/ 2>/dev/null || true
          
      - name: Update plugins.json for Animexin
        run: |
          cd $GITHUB_WORKSPACE/src
          ./gradlew makePluginsJson
          # Extract only Animexin entry from plugins.json
          if command -v jq &> /dev/null; then
            jq 'map(select(.name == "Animexin"))' build/plugins.json > $GITHUB_WORKSPACE/builds/animexin-plugins.json
          else
            cp build/plugins.json $GITHUB_WORKSPACE/builds/
          fi

      - name: Push Animexin builds
        run: |
          cd $GITHUB_WORKSPACE/builds
          git config user.email "action@github.com"
          git config user.name "GitHub Actions"
          git add .
          git commit -m "Update Animexin build from $GITHUB_SHA" || exit 0
          git push